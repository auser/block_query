// Code generated by pigeon; DO NOT EDIT.

package backends

import (
	"fmt"
	"log"

	"github.com/auser/block_query/grammar"
)

type JSONQuery struct {
	Input       string
	QueryString string
}

func (j *JSONQuery) Query() (string, error) {
	fmt.Printf("Querying against this json: %s\n", j.Input)
	q, err := grammar.Parse(j.QueryString)
	if err != nil {
		log.Fatal(err)
	}

	// buf := grammar.NewTrackedBuffer(nil)
	// q.ParseTree.Format(buf)
	fmt.Printf("%#v\n", string(q.(*grammar.Select).From.Expr[0].(*grammar.AliasedTableExpr).Expr.(*grammar.TableName).Name))

	return "", nil
}
